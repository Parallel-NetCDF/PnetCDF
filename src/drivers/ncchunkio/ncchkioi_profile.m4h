dnl Process this m4 file to produce 'C' language file.
dnl
dnl If you see this line, you can ignore the next one.
/* Do not edit this file. It is produced from the corresponding .m4 source */
dnl
/*
 *  Copyright (C) 2021, Northwestern University and Argonne National Laboratory
 *  See COPYRIGHT notice in top-level directory.
 */
/* $Id$ */
dnl
include(`foreach.m4')`'dnl
include(`foreach_idx.m4')`'dnl
include(`list_len.m4')`'dnl
include(`utils.m4')`'dnl
include(`ncchkioi_profile_timers.m4')`'dnl
define(`upcase', `translit(`$*', `a-z', `A-Z')')`'dnl
define(`CONCATE',`$1$2')`'dnl
changecom(`##', `')`'dnl
dnl
#pragma once

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

/*
 * Report performance profiling
 */
#ifdef PNETCDF_PROFILING

#define NC_CHK_NTIMER list_len(NC_CHK_TIMERS)

foreach_idx(`t', `i', NC_CHK_TIMERS, `#define CONCATE(`NC_CHK_TIMER_', upcase(t)) i
')dnl

#define NC_CHK_TIMER_START(A) ncchkp->profile.st[A] = MPI_Wtime(); 
#define NC_CHK_TIMER_PAUSE(A)  { \
    ncchkp->profile.tt[A] += MPI_Wtime() - ncchkp->profile.st[A]; \
}
#define NC_CHK_TIMER_STOP(A)  { \
    NC_CHK_TIMER_PAUSE(A) \
    ncchkp->profile.cnt[A] ++; \
}
#define NC_CHK_TIMER_SWAP(A, B)  { \
    double tmp = MPI_Wtime(); \
    ncchkp->profile.tt[A] += tmp - ncchkp->profile.st[A]; \
    ncchkp->profile.cnt[A] ++; \
    ncchkp->profile.st[B] = tmp;  \
}
#define NC_CHK_TIMER_STOPEX(A, B)  { \
    double tmp = MPI_Wtime(); \
    ncchkp->profile.tt[A] += tmp - ncchkp->profile.st[A]; \
    ncchkp->profile.cnt[A] ++; \
    ncchkp->profile.tt[B] -= tmp - ncchkp->profile.st[A]; \
}

dnl
typedef struct NC_chk_timers {
    /* Profiling information */
    double st[NC_CHK_NTIMER];
    double tt[NC_CHK_NTIMER];
    double cnt[NC_CHK_NTIMER];
} NC_chk_timers;

#else

#define NC_CHK_TIMER_START(A)
#define NC_CHK_TIMER_STOP(A)
#define NC_CHK_TIMER_PAUSE(A)
#define NC_CHK_TIMER_SWAP(A, B)
#define NC_CHK_TIMER_STOPEX(A, B) 

#endif

